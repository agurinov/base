version: "3.4"

# x-defaults:
#   &working_dir: /go/src/github.com/boomfunc/base
#   &logging
#     options:
#       max-size: "1m"

services:

    geo:
      image: golang
      environment:
        - BMP_DEBUG_MODE=true
        - BMP_CONFIG=./conf/example.yml
      volumes:
          - src-vol:/go/src/github.com/boomfunc/base
      ports:
          - "8080:8080"
      working_dir: /go/src/github.com/boomfunc/base
      command: .circleci/scripts/run.sh

    shell:
        image: golang
        volumes:
            - src-vol:/go/src/github.com/boomfunc/base
        working_dir: /go/src/github.com/boomfunc/base
        command: tail -f /dev/null

    build:
        image: golang
        volumes:
            - src-vol:/go/src/github.com/boomfunc/base
            - src-vol:/go/bin
        working_dir: /go/src/github.com/boomfunc/base
        command: .circleci/scripts/build.sh

    test:
        image: golang
        volumes:
            - src-vol:/go/src/github.com/boomfunc/base
        working_dir: /go/src/github.com/boomfunc/base
        command: .circleci/scripts/test.sh

    bench:
        image: golang
        volumes:
            - src-vol:/go/src/github.com/boomfunc/base
        working_dir: /go/src/github.com/boomfunc/base
        command: sh -c "go get -v -d -t ./...; go test ./... -v -race -run=^$$ -bench=. -benchmem"

    fmt:
        image: golang
        volumes:
            - src-vol:/go/src/github.com/boomfunc/base
        working_dir: /go/src/github.com/boomfunc/base
        command: .circleci/scripts/fmt.sh

volumes:
    src-vol:
        driver_opts:
            type: none
            device: ${PWD}
            o: bind
